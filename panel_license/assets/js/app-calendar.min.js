"use strict";let direction="ltr";if(isRtl){direction="rtl"}document.addEventListener("DOMContentLoaded",function(){(function(){const calendarEl=document.getElementById("calendar"),appCalendarSidebar=document.querySelector(".app-calendar-sidebar"),addEventSidebar=document.getElementById("addEventSidebar"),appOverlay=document.querySelector(".app-overlay"),calendarsColor={Business:"primary",Holiday:"success",Personal:"danger",Family:"warning",ETC:"info"},offcanvasTitle=document.querySelector(".offcanvas-title"),btnToggleSidebar=document.querySelector(".btn-toggle-sidebar"),btnSubmit=document.querySelector('button[type="submit"]'),btnDeleteEvent=document.querySelector(".btn-delete-event"),btnCancel=document.querySelector(".btn-cancel"),eventTitle=document.querySelector("#eventTitle"),eventStartDate=document.querySelector("#eventStartDate"),eventEndDate=document.querySelector("#eventEndDate"),eventUrl=document.querySelector("#eventURL"),eventLabel=$("#eventLabel"),eventGuests=$("#eventGuests"),eventLocation=document.querySelector("#eventLocation"),eventDescription=document.querySelector("#eventDescription"),allDaySwitch=document.querySelector(".allDay-switch"),selectAll=document.querySelector(".select-all"),filterInput=[].slice.call(document.querySelectorAll(".input-filter")),inlineCalendar=document.querySelector(".inline-calendar");let eventToUpdate,currentEvents=events,isFormValid=false,inlineCalInstance;const bsAddEventSidebar=new bootstrap.Offcanvas(addEventSidebar);if(eventLabel.length){function renderBadges(option){if(!option.id){return option.text}var $badge="<span class='badge badge-dot bg-"+$(option.element).data("label")+" me-2'> "+"</span>"+option.text;return $badge}select2Focus(eventLabel);eventLabel.wrap('<div class="position-relative"></div>').select2({placeholder:"Select value",dropdownParent:eventLabel.parent(),templateResult:renderBadges,templateSelection:renderBadges,minimumResultsForSearch:-1,escapeMarkup:function(es){return es}})}if(eventGuests.length){function renderGuestAvatar(option){if(!option.id){return option.text}var $avatar="<div class='d-flex flex-wrap align-items-center'>"+"<div class='avatar avatar-xs me-2'>"+"<img src='"+assetsPath+"img/avatars/"+$(option.element).data("avatar")+"' alt='avatar' class='rounded-circle' />"+"</div>"+option.text+"</div>";return $avatar}select2Focus(eventGuests);eventGuests.wrap('<div class="position-relative"></div>').select2({placeholder:"Select value",dropdownParent:eventGuests.parent(),closeOnSelect:false,templateResult:renderGuestAvatar,templateSelection:renderGuestAvatar,escapeMarkup:function(es){return es}})}if(eventStartDate){var start=eventStartDate.flatpickr({enableTime:true,altFormat:"Y-m-dTH:i:S",onReady:function(selectedDates,dateStr,instance){if(instance.isMobile){instance.mobileInput.setAttribute("step",null)}}})}if(eventEndDate){var end=eventEndDate.flatpickr({enableTime:true,altFormat:"Y-m-dTH:i:S",onReady:function(selectedDates,dateStr,instance){if(instance.isMobile){instance.mobileInput.setAttribute("step",null)}}})}if(inlineCalendar){inlineCalInstance=inlineCalendar.flatpickr({monthSelectorType:"static",inline:true})}function eventClick(info){eventToUpdate=info.event;if(eventToUpdate.url){info.jsEvent.preventDefault();window.open(eventToUpdate.url,"_blank")}bsAddEventSidebar.show();if(offcanvasTitle){offcanvasTitle.innerHTML="Update Event"}btnSubmit.innerHTML="Update";btnSubmit.classList.add("btn-update-event");btnSubmit.classList.remove("btn-add-event");btnDeleteEvent.classList.remove("d-none");eventTitle.value=eventToUpdate.title;start.setDate(eventToUpdate.start,true,"Y-m-d");eventToUpdate.allDay===true?allDaySwitch.checked=true:allDaySwitch.checked=false;eventToUpdate.end!==null?end.setDate(eventToUpdate.end,true,"Y-m-d"):end.setDate(eventToUpdate.start,true,"Y-m-d");eventLabel.val(eventToUpdate.extendedProps.calendar).trigger("change");eventToUpdate.extendedProps.location!==undefined?eventLocation.value=eventToUpdate.extendedProps.location:null;eventToUpdate.extendedProps.guests!==undefined?eventGuests.val(eventToUpdate.extendedProps.guests).trigger("change"):null;eventToUpdate.extendedProps.description!==undefined?eventDescription.value=eventToUpdate.extendedProps.description:null}function modifyToggler(){const fcSidebarToggleButton=document.querySelector(".fc-sidebarToggle-button");fcSidebarToggleButton.classList.remove("fc-button-primary");fcSidebarToggleButton.classList.add("d-lg-none","d-inline-block","ps-0");while(fcSidebarToggleButton.firstChild){fcSidebarToggleButton.firstChild.remove()}fcSidebarToggleButton.setAttribute("data-bs-toggle","sidebar");fcSidebarToggleButton.setAttribute("data-overlay","");fcSidebarToggleButton.setAttribute("data-target","#app-calendar-sidebar");fcSidebarToggleButton.insertAdjacentHTML("beforeend",'<i class="mdi mdi-menu mdi-24px text-body"></i>')}function selectedCalendars(){let selected=[],filterInputChecked=[].slice.call(document.querySelectorAll(".input-filter:checked"));filterInputChecked.forEach(item=>{selected.push(item.getAttribute("data-value"))});return selected}function fetchEvents(info,successCallback){let calendars=selectedCalendars();let selectedEvents=currentEvents.filter(function(event){return calendars.includes(event.extendedProps.calendar.toLowerCase())});successCallback(selectedEvents)}let calendar=new Calendar(calendarEl,{initialView:"dayGridMonth",events:fetchEvents,plugins:[dayGridPlugin,interactionPlugin,listPlugin,timegridPlugin],editable:true,dragScroll:true,dayMaxEvents:2,eventResizableFromStart:true,customButtons:{sidebarToggle:{text:"Sidebar"}},headerToolbar:{start:"sidebarToggle, prev,next, title",end:"dayGridMonth,timeGridWeek,timeGridDay,listMonth"},direction:direction,initialDate:new Date,navLinks:true,eventClassNames:function({event:calendarEvent}){const colorName=calendarsColor[calendarEvent._def.extendedProps.calendar];return["fc-event-"+colorName]},dateClick:function(info){let date=moment(info.date).format("YYYY-MM-DD");resetValues();bsAddEventSidebar.show();if(offcanvasTitle){offcanvasTitle.innerHTML="Add Event"}btnSubmit.innerHTML="Add";btnSubmit.classList.remove("btn-update-event");btnSubmit.classList.add("btn-add-event");btnDeleteEvent.classList.add("d-none");eventStartDate.value=date;eventEndDate.value=date},eventClick:function(info){eventClick(info)},datesSet:function(){modifyToggler()},viewDidMount:function(){modifyToggler()}});calendar.render();modifyToggler();const eventForm=document.getElementById("eventForm");const fv=FormValidation.formValidation(eventForm,{fields:{eventTitle:{validators:{notEmpty:{message:"Please enter event title "}}},eventStartDate:{validators:{notEmpty:{message:"Please enter start date "}}},eventEndDate:{validators:{notEmpty:{message:"Please enter end date "}}}},plugins:{trigger:new FormValidation.plugins.Trigger,bootstrap5:new FormValidation.plugins.Bootstrap5({eleValidClass:"",rowSelector:function(field,ele){return".mb-4"}}),submitButton:new FormValidation.plugins.SubmitButton,autoFocus:new FormValidation.plugins.AutoFocus}}).on("core.form.valid",function(){isFormValid=true}).on("core.form.invalid",function(){isFormValid=false});if(btnToggleSidebar){btnToggleSidebar.addEventListener("click",e=>{btnCancel.classList.remove("d-none")})}function addEvent(eventData){currentEvents.push(eventData);calendar.refetchEvents()}function updateEvent(eventData){eventData.id=parseInt(eventData.id);currentEvents[currentEvents.findIndex(el=>el.id===eventData.id)]=eventData;calendar.refetchEvents()}function removeEvent(eventId){currentEvents=currentEvents.filter(function(event){return event.id!=eventId});calendar.refetchEvents()}const updateEventInCalendar=(updatedEventData,propsToUpdate,extendedPropsToUpdate)=>{const existingEvent=calendar.getEventById(updatedEventData.id);for(var index=0;index<propsToUpdate.length;index++){var propName=propsToUpdate[index];existingEvent.setProp(propName,updatedEventData[propName])}existingEvent.setDates(updatedEventData.start,updatedEventData.end,{allDay:updatedEventData.allDay});for(var index=0;index<extendedPropsToUpdate.length;index++){var propName=extendedPropsToUpdate[index];existingEvent.setExtendedProp(propName,updatedEventData.extendedProps[propName])}};function removeEventInCalendar(eventId){calendar.getEventById(eventId).remove()}btnSubmit.addEventListener("click",e=>{if(btnSubmit.classList.contains("btn-add-event")){if(isFormValid){let newEvent={id:calendar.getEvents().length+1,title:eventTitle.value,start:eventStartDate.value,end:eventEndDate.value,startStr:eventStartDate.value,endStr:eventEndDate.value,display:"block",extendedProps:{location:eventLocation.value,guests:eventGuests.val(),calendar:eventLabel.val(),description:eventDescription.value}};if(eventUrl.value){newEvent.url=eventUrl.value}if(allDaySwitch.checked){newEvent.allDay=true}addEvent(newEvent);bsAddEventSidebar.hide()}}else{if(isFormValid){let eventData={id:eventToUpdate.id,title:eventTitle.value,start:eventStartDate.value,end:eventEndDate.value,url:eventUrl.value,extendedProps:{location:eventLocation.value,guests:eventGuests.val(),calendar:eventLabel.val(),description:eventDescription.value},display:"block",allDay:allDaySwitch.checked?true:false};updateEvent(eventData);bsAddEventSidebar.hide()}}});btnDeleteEvent.addEventListener("click",e=>{removeEvent(parseInt(eventToUpdate.id));bsAddEventSidebar.hide()});function resetValues(){eventEndDate.value="";eventUrl.value="";eventStartDate.value="";eventTitle.value="";eventLocation.value="";allDaySwitch.checked=false;eventGuests.val("").trigger("change");eventDescription.value=""}addEventSidebar.addEventListener("hidden.bs.offcanvas",function(){resetValues()});btnToggleSidebar.addEventListener("click",e=>{if(offcanvasTitle){offcanvasTitle.innerHTML="Add Event"}btnSubmit.innerHTML="Add";btnSubmit.classList.remove("btn-update-event");btnSubmit.classList.add("btn-add-event");btnDeleteEvent.classList.add("d-none");appCalendarSidebar.classList.remove("show");appOverlay.classList.remove("show")});if(selectAll){selectAll.addEventListener("click",e=>{if(e.currentTarget.checked){document.querySelectorAll(".input-filter").forEach(c=>c.checked=1)}else{document.querySelectorAll(".input-filter").forEach(c=>c.checked=0)}calendar.refetchEvents()})}if(filterInput){filterInput.forEach(item=>{item.addEventListener("click",()=>{document.querySelectorAll(".input-filter:checked").length<document.querySelectorAll(".input-filter").length?selectAll.checked=false:selectAll.checked=true;calendar.refetchEvents()})})}inlineCalInstance.config.onChange.push(function(date){calendar.changeView(calendar.view.type,moment(date[0]).format("YYYY-MM-DD"));modifyToggler();appCalendarSidebar.classList.remove("show");appOverlay.classList.remove("show")})})()});